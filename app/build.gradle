plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.example.programapp"
        minSdk 27
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        buildTypes {

            release {

                minifyEnabled false

                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

                ext.config = getProps('../config/release.properties')

                ext.config.each { p ->

                    if(p.key == "APPNAME"){

                        resValue "string","app_name", p.value

                    }

                    else if(p.key=="APPLICATION_ID_SUFFIX"){

                        applicationIdSuffix p.value

                    }else

                        buildConfigField 'String', p.key, p.value

                }


            }

            staging {

                minifyEnabled false

                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'


                ext.config = getProps('../config/staging.properties')

                ext.config.each { p ->

                    if (p.key == "APPNAME") {

                        resValue "string", "app_name", p.value.replace('"', '')

                    } else if (p.key == "APPLICATION_ID_SUFFIX") {

                        applicationIdSuffix p.value

                    } else {

                        buildConfigField 'String', p.key, p.value

                    }

                }

            }

            debug {

                minifyEnabled false

                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

                ext.config = getProps('../config/development.properties')

                ext.config.each { p ->

                    if (p.key == "APPNAME") {

                        resValue "string", "app_name", p.value

                    } else if (p.key == "APPLICATION_ID_SUFFIX") {

                        applicationIdSuffix p.value

                    } else

                        buildConfigField 'String', p.key, p.value


                }

            }

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation platform('com.google.firebase:firebase-bom:28.4.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

def getProps(path) {

    Properties props = new Properties()

    props.load(new FileInputStream(file(path)))

    return props

}